'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

var _runner = require('mocha/lib/runner');

var _runner2 = _interopRequireDefault(_runner);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const debugLog = (0, _debug2.default)('mocha-parallel-tests:runner-wrapped');

class RunnerWrapped extends _runner2.default {
    constructor(suite, delay) {
        super(suite, delay);

        // this is default mocha runner behaviour
        // when runner is created in mocha.run()
        this.ignoreLeaks = true;

        this._started = false;
    }

    start(test) {
        if (this._started) {
            return;
        }

        this._started = true;
        this.emit('start', test);
    }

    end(test) {
        this.emit('end', test);
    }

    /**
     * Emit events
     *
     * @param {String} evt - event title
     * @param {Object} test - test data
     */
    emit() {
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
        }

        debugLog(`Emit ${ args[0] } event`);

        // emit data
        super.emit.apply(this, args);
        return this;
    }
}
exports.default = RunnerWrapped;
module.exports = exports['default'];